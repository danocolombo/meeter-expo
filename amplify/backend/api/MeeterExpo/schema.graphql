type System @model @auth(rules: [{allow: public}]) {
  id: ID!
  version: String
  ios_version: String
  android_version: String
  defaultProfilePicture: String
}

type Affiliations @model @auth(rules: [{allow: public}]) {
  id: ID!
  role: String
  status: String
  userID: ID! @index(name: "byUser")
  Organization: Organization @hasOne
}

type Organization @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  code: String
  heroMessage: String
}

type DefaultGroups @model @auth(rules: [{allow: public}]) {
  id: ID!
  gender: String
  title: String
  location: String
  facilitator: String
  coFacilitator: String
}

type Residence @model @auth(rules: [{allow: public}]) {
  id: ID!
  street: String
  city: String
  stateProv: String
  postalCode: String
}

type Profile @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub: String
  firstName: String
  lastName: String
  email: String
  phone: String
  username: String
  birthday: String
  shirt: String
  defaultClient: String
  defaultClientId: String
  activeAffiliate: String
  profilePic: String
  activeClientCode: String
  activeClientRole: String
  activeClientName: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub: String
  firstName: String
  lastName: String
  username: String
  phone: String
  email: String
  birthday: String
  shirt: String
  picture: String
  DefaultOrg: Organization @hasOne
  ActiveOrg: Organization @hasOne
  Affiliations: [Affiliations] @hasMany(indexName: "byUser", fields: ["id"])
  Residence: Residence @hasOne
}

type MeeterSystem @model @auth(rules: [{allow: public}]) {
  id: ID!
  version: String
  ios_version: String
  android_version: String
  defaultProfilePic: String
}
 