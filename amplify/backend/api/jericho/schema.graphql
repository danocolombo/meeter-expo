# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
    globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type DefaultGroup @model {
    id: ID!
    title: String!
    gender: String!
    location: String
    facilitator: String
    organization: Organization @belongsTo
}

type User @model {
    id: ID!
    sub: String! @index
    username: String!
    firstName: String
    lastName: String
    email: String
    phone: String
    shirt: String
    birthday: String
    defaultOrg: Organization @belongsTo
    picture: String
    affiliations: [Affiliation] @hasMany
    location: Location @belongsTo
    manages: [Organization] @manyToMany(relationName: "ManageOrganization")
}

type Affiliation @model {
    id: ID!
    role: String!
    status: String!
    user: User @belongsTo
    organization: Organization @belongsTo
}

type Organization @model {
    id: ID!
    name: String!
    code: String!
    location: Location @belongsTo
    affiliations: [Affiliation] @hasMany
    defaultUsers: [User] @hasMany
    heroMessage: String
    meetings: [Meeting] @hasMany
    groups: [Group] @hasMany
    defaultGroups: [DefaultGroup] @hasMany
    managers: [User] @manyToMany(relationName: "ManageOrganization")
}

type Location @model {
    id: ID!
    street: String
    city: String
    stateProv: String
    postalCode: String
    organizations: [Organization] @hasMany
    users: [User] @hasMany
}

type System @model {
    id: ID!
    appName: String!
    android_version: String
    ios_version: String
    version: String
    defaultProfilePicture: String
    logoPicture: String
}

type Meeting @model {
    id: ID! @index(name: "meetingsByDate", sortKeyFields: ["meetingDate"])
    meetingDate: String
    title: String
    meetingType: String
    mtgCompKey: String
    organization: Organization @belongsTo
    groups: [Group] @hasMany
    announcementsContact: String
    attendanceCount: Int
    avContact: String
    cafeContact: String
    cafeCount: Int
    childrenContact: String
    childrenCount: Int
    cleanupContact: String
    closingContact: String
    donations: Float
    facilitatorContact: String
    greeterContact1: String
    greeterContact2: String
    meal: String
    mealContact: String
    mealCount: Int
    newcomersCount: Int
    notes: String
    nurseryContact: String
    nurseryCount: Int
    resourceContact: String
    securityContact: String
    setupContact: String
    supportContact: String
    transportationContact: String
    transportationCount: Int
    worship: String
    youthContact: String
    youthCount: Int
}

type Group @model {
    id: ID!
    meeting: Meeting @belongsTo
    organization: Organization @belongsTo
    grpCompKey: String
    title: String
    location: String
    gender: String
    attendance: Int
    facilitator: String
    cofacilitator: String
    notes: String
}
